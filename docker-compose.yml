services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: orderprocessing-sql
    environment:
      SA_PASSWORD: "Test1234!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P Test1234! -Q \"SELECT 1\""]
      interval: 10s
      timeout: 5s
      retries: 50

  rabbitmq:
    image: rabbitmq:3.13-management          
    container_name: orderprocessing-rabbit
    ports:
      - "5672:5672"       
      - "15672:15672"     
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks: [backend]
    healthcheck:                         
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 50

  api:
    build:
      context: .
      dockerfile: OrderProcessing.API/Dockerfile
    container_name: orderprocessing-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=DB_PROCESS_ORDER;User Id=sa;Password=Test1234!;TrustServerCertificate=true;"
      RabbitMq__Host: rabbitmq           
      RabbitMq__Port: "5672"
      RabbitMq__UserName: guest
      RabbitMq__Password: guest
      RabbitMq__Queue: order-queue
    ports:
      - "8080:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - backend

  consumer_container:
    build:
      context: .
      dockerfile: OrderProcessing.Consumer/Dockerfile
    container_name: consumer_container
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__Port=5672
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
      - RabbitMq__QueueName=order-queue


networks:
  backend:
    driver: bridge
